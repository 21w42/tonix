pragma ton-solidity >= 0.61.2;
import "bus.sol";
interface idevice {

    function device_add_child(uint16 di, string name, uint16 unit) external returns (device_t);
    function device_add_child_ordered(uint16 di, uint16 order, string name, uint16 unit) external returns (device_t);
    function device_busy(uint16 di) external;
    function device_delete_child(uint16 di, uint16 dci) external returns (uint8);
    function device_delete_children(uint16 di) external returns (uint8);
    function device_attach(uint16 di) external returns (uint8);
    function device_detach(uint16 di) external returns (uint8);
    function device_disable(uint16 di) external;
    function device_enable(uint16 di) external;
    function device_find_child(uint16 di, string classname, uint16 unit) external returns (device_t);
    function device_get_desc(uint16 di) external view returns (string);
    function device_get_devclass(uint16 di) external view returns (devclass_t);
    function device_get_driver(uint16 di) external view returns (driver_t);
    function device_get_flags(uint16 di) external view returns (uint32);
    function device_get_parent(uint16 di) external view returns (device_t);
    function device_get_children(uint16 di) external view returns (uint16, device_t[] listp, uint16[] countp);
    function device_get_ivars(uint16 di) external view returns (string);
    function device_set_ivars(uint16 di, string ivars) external;
    function device_get_name(uint16 di) external view returns (string);
    function device_get_nameunit(uint16 di) external view returns (string);
    function device_get_softc(uint16 di) external view returns (bytes);
    function device_get_state(uint16 di) external view returns (device_state);
    function device_get_unit(uint16 di) external view returns (uint16);
//    function device_get_sysctl_ctx(device_t dev) external returns (s_sysctl_ctx_list);
//    function device_get_sysctl_tree(device_t dev) external returns (s_sysctl_oid);
    function device_has_quiet_children(uint16 di) external view returns (bool);
    function device_is_alive(uint16 di) external view returns (bool);
    function device_is_attached(uint16 di) external view returns (bool);
    function device_is_enabled(uint16 di) external view returns (bool);
    function device_is_suspended(uint16 di) external view returns (bool);
    function device_is_quiet(uint16 di) external view returns (bool);
    function device_lookup_by_name(string name) external view returns (device_t);
    function device_print_prettyname(uint16 di) external returns (uint8);
    function device_printf(uint16 di, string fmt, string[] ss, uint16[] dd) external returns (uint8);
    function device_log(uint16 di, uint16 pri, string) external returns (uint8);
    function device_probe(uint16 di) external returns (uint8);
    function device_probe_and_attach(uint16 di) external returns (uint8);
    function device_probe_child(uint16 dbi, uint16 di) external returns (uint8);
    function device_quiesce(uint16 di) external returns (uint8);
    function device_quiet(uint16 di) external;
    function device_quiet_children(uint16 di) external;
    function device_set_desc(uint16 di, string desc) external;
    function device_set_desc_copy(uint16 di, string desc) external;
    function device_set_devclass(uint16 di, string classname) external returns (uint8);
    function device_set_devclass_fixed(uint16 di, string classname) external returns (uint8);
    function device_is_devclass_fixed(uint16 di) external view returns (bool);
    function device_set_driver(uint16 di, uint16 driver) external returns (uint8);
    function device_set_flags(uint16 di, uint32 flags) external;
    function device_set_softc(uint16 di, bytes softc) external;
    function device_free_softc(bytes softc) external;
    function device_claim_softc(uint16 di) external;
    function device_set_unit(uint16 di, uint16 unit) external returns (uint8);
    function device_shutdown(uint16 di) external returns (uint8);
    function device_unbusy(uint16 di) external;
    function device_verbose(uint16 di) external;
    function device_get_property(uint16 di, string prop, bytes val, uint16 sz, device_property_type ptype) external view returns (uint16);
    function device_has_property(uint16 di, string prop) external view returns (bool);
}